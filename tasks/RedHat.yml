---
- name: Install MySQL community repo
  yum:
    name: "{{mysql_pkg_repo_url}}/{{mysql_repo_pkg_name}}"
    state: present

- name: Install mysql package
  yum:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
    - "{{mysql_pkg_name}}"
    - MySQL-python

- name: Make sure mysqld is up
  systemd:
    name: "{{mysql_service_name}}"
    state: started
    enabled: yes
  register: mysqld_up

- name: Get stats of .my.cnf
  stat:
    path: ~/.my.cnf
    get_md5: no
    get_checksum: no
  register: st_mycnf

- name: Pause for 10 sec
  pause:
    seconds: 10
  when: mysqld_up is changed

- name: Grep temporary password
  shell: "/usr/bin/grep 'temporary password' {{mysql_logfile}} | /usr/bin/awk '{print $NF}'"
  register: temp_passwd
  when: not st_mycnf.stat.exists

- name: Reset root password
  shell: "echo \"alter user 'root'@'localhost' identified with mysql_native_password as '{{mysql_root_passwd_hash}}'\" | /usr/bin/mysql --connect-expired-password -u root -p'{{temp_passwd.stdout}}'"
  when: not st_mycnf.stat.exists

- name: Template for .my.cnf
  template:
    src: root.cnf.j2
    dest: ~/.my.cnf
    mode: 0600
  when: not st_mycnf.stat.exists

- name: Ensure Anonymous users are not in the database
  mysql_user:
    name: ''
    host: "{{item}}"
    state: absent
  with_items:
    - "{{ansible_hostname}}"
    - localhost

- name: Remove the test database
  mysql_db:
    name: test
    state: absent

- name: Check db user
  command: "/usr/bin/mysql -u {{mysql_db_user}} -p'{{mysql_db_passwd}}' {{mysql_db_name}}"
  register: check_db_user
  failed_when: False
  changed_when: False

- name: Create db user with password hash
  shell: "echo \"create user '{{mysql_db_user}}'@'localhost' identified with mysql_native_password as '{{mysql_db_passwd_hash}}'\" | /usr/bin/mysql -u root -p'{{mysql_root_passwd}}'"
  when: check_db_user.rc != 0 and mysql_db_passwd_hash != ''

- name: Grant privileges for user
  mysql_user:
    name: "{{mysql_db_user}}"
    priv: '*.*:ALL'
    state: present
  when: mysql_db_passwd_hash != ''

- name: Create user for the db
  mysql_user:
    name: "{{mysql_db_user}}"
    password: "{{mysql_db_passwd}}"
    priv: '*.*:ALL'
    state: present
  when: mysql_db_passwd_hash == ''

- name: Create database
  mysql_db:
    name: "{{mysql_db_name}}"
    encoding: utf8
    state: present

- name: Get stats of monitrc
  stat:
    path: "{{monit_dir}}/monitrc"
    get_md5: no
    get_checksum: no
  register: st_monitrc

- name: Template mysqld.monit
  template:
    src: mysqld.monit.j2
    dest: "{{monit_includedir}}/mysqld.monit"
    mode: 0644
  vars:
    pidfile: "{{mysql_pidfile}}"
  when: st_monitrc.stat.exists
  notify: Restart_monit.service
